// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SistemaUniversidad.FrontEnd.Pr0.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using SistemaUniversidad.FrontEnd.Pr0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using SistemaUniversidad.FrontEnd.Pr0.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\_Imports.razor"
using SistemaUniversidad.FrontEnd.Pr0.Dtos;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Aulas")]
    public partial class Aulas : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 182 "C:\Users\andyj\Escritorio\Progra\Sistema Universidad\SistemaUniversidad.FrontEnd\SistemaUniversidad.FrontEnd.Pr0\Pages\Aulas.razor"
       
    private AulaDto[] ListaDeAulas;//Acá se guardará la lista de aulas

    private AulaDto AulaDtoModel = new();


    private string AccionDeEdicion;

    private string NumeroAulaPorActualizar;

    private string NumeroAulaPorEliminar;

    private string UtlHost = "https://localhost:44365/api";

    protected override async Task OnInitializedAsync() //Esto es lo primero que se ejecutará
    {
        await ObtenerAulas(); //con solo llamar a este método, ya se puede cargar la lista de aulas a nivel de la vista
    }

    private async Task MostrarModalDeAgregar()
    {

        AccionDeEdicion = "Agregar"; //Se especifica que esta en modo de "Agregar" para en el método de Guardar "GuardarAula" entonces hacer el insert

        AulaDtoModel = new(); //Se limpia el modelo y por ende se limpian los controles donde el usuario ingresa los datos

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeAula"); //global.openModa: Esta funcion tiene que existir  en wwwroot/js/utilitarios.js, "ModalEdicionDeAula" :es el id del modal que se quiere ocultar o mostrar

    }

    private async Task MostrarModalDeActualizar(string NumeroAula)
    {

        AccionDeEdicion = "Actualizar";//Se especifica que esta en modo de "Actualizar" para en el método de Guardar "GuardarAula" entonces hacer el Update

        await ObtenerAulaPorId(NumeroAula); //Se obtiene los datos del API de una aula, para editarla

        NumeroAulaPorActualizar = NumeroAula; //deja en cache por así decirlo el número de aula que se va a actualizar

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeAula");

    }

    private async Task GuardarAula()
    {
        if (AccionDeEdicion == "Agregar")
        {
            await AgregarAula(); //llama al método que va al API a insertar un Aula
        }
        else
        {
            await ActualizarAula(); //llama al método que va al API a actualizar un Aula
        }
    }


    private async Task MostrarModalDeEliminar(string NumeroAula)
    {

        await ObtenerAulaPorId(NumeroAula); //Se obtiene los datos del API de una aula, para eliminarla

        NumeroAulaPorEliminar = NumeroAula; //deja en cache por así decirlo el núnmero de aula que se va a eliminar

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalConfirmacionDeEliminacionDeAula");
    }

    private async Task ConfirmarEliminacionDeAula() //Este método se ejecuta cuanso se presiona el botón de "Sí", para borrar un aula
    {

        await EliminarAula(); //llama al método que va al API a liminar un Aula

    }


    private async Task ObtenerAulas()
    {
        ListaDeAulas = await Http.GetFromJsonAsync<AulaDto[]>($"{UtlHost}/Aulas");
    }

    private async Task ObtenerAulaPorId(string NumeroAula)
    {
        AulaDtoModel = await Http.GetFromJsonAsync<AulaDto>($"{UtlHost}/Aulas/{NumeroAula}"); // ejemplo: https://localhost:44302/api/Aulas/23

    }


    private async Task AgregarAula()
    {
        var Aula = AulaDtoModel; //Este objeto "AulaDtoModel", contiene los valores que el usuario ingresa en los texbox, la magia lo hace el <EditForm Model="@AulaDtoModel", que llena automaticamente el objeto con lo que el usuario ingresa

        using var response = await Http.PostAsJsonAsync($"{UtlHost}/Aulas", Aula); // ejemplo: https://localhost:44302/api/Aulas

        if (response.IsSuccessStatusCode) //si todo sale bien con el llamado al API 
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeAula");

            await ObtenerAulas(); //Se recarga la lista da ulas para poder ver el registro agregado

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Aula agregada correctamente");

        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}"); //Se muestra en la consola el error que devuelve el API

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo agregar el aula ");

        }
    }

    private async Task ActualizarAula()
    {
        var Aula = AulaDtoModel; //Este objeto "AulaDtoModel", contiene los valores que el usuario ingresa en los texbox, la magia lo hace el <EditForm Model="@AulaDtoModel", que llena automaticamente el objeto con lo que el usuario ingresa

        using var response = await Http.PutAsJsonAsync($"{UtlHost}/Aulas/{NumeroAulaPorActualizar}", Aula);// ejemplo: https://localhost:44302/api/Aulas/23

        if (response.IsSuccessStatusCode) //si todo sale bien con el llamado al API 
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeAula");

            await ObtenerAulas(); //Se recarga la lista da ulas para poder ver el registro actualizado

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Aula actualizada correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}"); //Se muestra en la consola el error que devuelve el API

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo actualizar el aula ");

        }
    }

    private async Task EliminarAula()
    {
        using var response = await Http.DeleteAsync($"{UtlHost}/Aulas/{NumeroAulaPorEliminar}");

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalConfirmacionDeEliminacionDeAula");

            await ObtenerAulas();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Aula eliminada correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "Error al eliminar el aula");

        }
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
