@page "/CicloLectivo"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>
    Lista de Clicos Lectivos
</h1>

<div class="card dcard">
    <div class="card-body px-1 px-md-3">

        <form autocomplete="off">
            <div class="d-flex justify-content-between flex-column flex-sm-row mb-3 px-2 px-sm-0">
                <h3 class="text-125 pl-1 mb-3 mb-sm-0 text-secondary-d4">
                    Listado de Aulas
                </h3>

                <div class="mb-2 mb-sm-0">
                    <button type="button" class="btn btn-blue px-3 d-block w-100 text-95 radius-round border-2 brc-black-tp10" @onclick="MostrarModalDeAgregar">
                        <i class="fa fa-plus mr-1"></i>
                        Agregar <span class="d-sm-none d-md-inline">Aula</span>
                    </button>
                </div>
            </div>

            @if (ListaDeCicloLectivo == null)
            {
                <p><em>Cargando Listado De Ciclos Lectivos...</em></p> }
            else
            {
                <table id="simple-table" class="mb-0 table table-borderless table-bordered-x brc-secondary-l3 text-dark-m2 radius-1 overflow-hidden">
                    <thead class="text-dark-tp3 bgc-grey-l4 text-90 border-b-1 brc-transparent">
                        <tr>
                            <th>Numero Ciclo</th>
                            <th>Nombre Ciclo</th>
                            <th>Fecha Inicio</th>
                            <th>Fecha Fin</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>

                    <tbody class="mt-1">

                        @foreach (var CicloLectivo in ListaDeCicloLectivo)
                        {
                            <tr class="bgc-h-yellow-l4 d-style">
                                <td class="text-600 text-dark">@CicloLectivo.NumeroCiclo</td>
                                <td class="text-600 text-orange-d2">@CicloLectivo.NombreCiclo</td>
                                <td class="text-600 text-orange-d2">@CicloLectivo.FechaInicio</td>
                                <td class="text-600 text-orange-d2">@CicloLectivo.FechaFin</td>
                                <td>
                                    <div class="d-none d-lg-flex">

                                        <button type="button" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-success btn-a-lighter-success" @onclick="() => MostrarModalDeActualizar(CicloLectivo.NumeroCiclo)">
                                            <i class="fa fa-pencil-alt"></i>
                                        </button>

                                        <button type="button" class="mx-2px btn radius-1 border-2 btn-xs btn-brc-tp btn-light-secondary btn-h-lighter-danger btn-a-lighter-danger" @onclick="() => MostrarModalDeEliminar(CicloLectivo.NumeroCiclo)">
                                            <i class="fa fa-trash-alt"></i>
                                        </button>


                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>}

        </form>
    </div>
</div>

<div class="modal fade" id="ModalEdicionDeCicloLectivo" tabindex="-1" role="dialog" aria-labelledby="LabelEdicionDeCicloLectivos" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelEdicionDeCicloLectivos">
                    @(AccionDeEdicion + " " + "CicloLectivos")
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@CicloLectivoDtoModel" OnValidSubmit="@GuardarCiclo">

                <DataAnnotationsValidator />

                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="NumeroCiclo" class="mb-0">Número de Ciclo</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="NumeroCiclo" @bind-Value="@CicloLectivoDtoModel.NumeroCiclo" disabled="@(AccionDeEdicion == "Actualizar" ? true : false)"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese número de ciclo" />
                            <ValidationMessage For="() => CicloLectivoDtoModel.NumeroCiclo" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="NombreCiclo" class="mb-0">Numero de Ciclo</label>
                        </div>

                        <div class="col-sm-8">
                            <InputText id="Horario" @bind-Value="@CicloLectivoDtoModel.NombreCiclo"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese el Nombre de Ciclo" />
                            <ValidationMessage For="() => CicloLectivoDtoModel.NombreCiclo" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="FechaInicio" class="mb-0">Fecha Inicio Ciclo Lectivo</label>
                        </div>

                        <div class="col-sm-8">
                            <InputDate id="FechaInicio" @bind-Value="@CicloLectivoDtoModel.FechaInicio"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese la Fecha de Inicio del Ciclo Lectivo" />
                            <ValidationMessage For="() => CicloLectivoDtoModel.FechaInicio" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="FechaFin" class="mb-0">Fecha Final Ciclo Lectivo</label>
                        </div>

                        <div class="col-sm-8">
                            <InputDate id="FechaFin" @bind-Value="@CicloLectivoDtoModel.FechaFin"
                                       class="form-control col-sm-12 col-md-12" placeholder="Ingrese la Fecha del Final del Ciclo Lectivo" />
                            <ValidationMessage For="() => CicloLectivoDtoModel.FechaFin" />
                        </div>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary px-4">Guardar</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<div class="modal fade" id="ModalConfirmacionDeEliminacionDeCicloLectivo" tabindex="-1" role="dialog" aria-labelledby="LabelConfirmacionDeEliminacionDeCiclo" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title text-primary-d3" id="LabelConfirmacionDeEliminacionDeCiclo">
                    Eliminar Ciclo
                </h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <EditForm Model="@CicloLectivoDtoModel">


                <div class="modal-body">

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CicloPorEliminarNumeroCiclo" class="mb-0">Número de Ciclo</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CicloPorEliminarNumeroCiclo" class="form-control col-sm-12 col-md-12">@CicloLectivoDtoModel.NumeroCiclo</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CicloPorEliminarNombreCiclo" class="mb-0">Nombre de Ciclo</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CicloPorEliminarNombreCiclo" class="form-control col-sm-12 col-md-12">@CicloLectivoDtoModel.NombreCiclo</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CicloPorEliminarFechaInicioCiclo" class="mb-0">Fecha Inicio</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CicloPorEliminarFechaInicioCiclo" class="form-control col-sm-12 col-md-12">@CicloLectivoDtoModel.FechaInicio</label>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-4 col-form-label text-sm-right pr-0">
                            <label for="CicloPorEliminarFechaFinCiclo" class="mb-0">Fecha Fin</label>
                        </div>

                        <div class="col-sm-8">
                            <label for="CicloPorEliminarFechaFinCiclo" class="form-control col-sm-12 col-md-12">@CicloLectivoDtoModel.FechaFin</label>
                        </div>
                    </div>

                    <div class="alert bgc-orange-l3 brc-orange-l1 text-dark-tp1" role="alert">
                        Desea
                        <a class="alert-link text-danger-d1">
                            Eliminar
                        </a>
                        este registro?
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary px-4" @onclick="ConfirmarEliminacionDeCiclo">Sí</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>



@code {
    private CicloLectivoDto[] ListaDeCicloLectivo;

    private CicloLectivoDto CicloLectivoDtoModel = new();


    private string AccionDeEdicion;

    private string NumeroCicloPorActualizar;

    private string NumeroCicloPorEliminar;

    private string UtlHost = "https://localhost:44365/api";

    protected override async Task OnInitializedAsync()
    {
        await ObtenerCicloLectivo();
    }

    private async Task MostrarModalDeAgregar()
    {

        AccionDeEdicion = "Agregar";
        CicloLectivoDtoModel = new();

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeCicloLectivo");
    }

    private async Task MostrarModalDeActualizar(string NumeroCiclo)
    {

        AccionDeEdicion = "Actualizar";

        await ObtenerCicloLectivoPorId(NumeroCiclo);

        NumeroCicloPorActualizar = NumeroCiclo;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalEdicionDeCicloLectivo");

    }

    private async Task GuardarCiclo()
    {
        if (AccionDeEdicion == "Agregar")
        {
            await AgregarCicloLectivo();
        }
        else
        {
            await ActualizarCicloLectivo();
        }
    }


    private async Task MostrarModalDeEliminar(string NumeroCiclo)
    {

        await ObtenerCicloLectivoPorId(NumeroCiclo);

        NumeroCicloPorEliminar = NumeroCiclo;

        await JSRuntime.InvokeAsync<object>("global.openModal", "ModalConfirmacionDeEliminacionDeCicloLectivo");
    }

    private async Task ConfirmarEliminacionDeCiclo()
    {

        await EliminarCiclo();

    }


    private async Task ObtenerCicloLectivo()
    {
        ListaDeCicloLectivo = await Http.GetFromJsonAsync<CicloLectivoDto[]>($"{UtlHost}/CiclosLectivos");
    }

    private async Task ObtenerCicloLectivoPorId(string NumeroCiclo)
    {
        CicloLectivoDtoModel = await Http.GetFromJsonAsync<CicloLectivoDto>($"{UtlHost}/CiclosLectivos/{NumeroCiclo}");

    }


    private async Task AgregarCicloLectivo()
    {
        var CicloLectivo = CicloLectivoDtoModel;

        using var response = await Http.PostAsJsonAsync($"{UtlHost}/CiclosLectivos", CicloLectivo);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeCicloLectivo");

            await ObtenerCicloLectivo();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Ciclo Lectivo agregada correctamente");

        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo agregar el Ciclo Lectivo ");

        }
    }

    private async Task ActualizarCicloLectivo()
    {
        var CicloLectivo = CicloLectivoDtoModel;

        using var response = await Http.PutAsJsonAsync($"{UtlHost}/CiclosLectivos/{NumeroCicloPorActualizar}", CicloLectivo);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalEdicionDeCicloLectivo");

            await ObtenerCicloLectivo();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Ciclo actualizado correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "No se pudo actualizar el ciclo ");

        }
    }

    private async Task EliminarCiclo()
    {
        using var response = await Http.DeleteAsync($"{UtlHost}/CiclosLectivos/{NumeroCicloPorEliminar}");

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeAsync<object>("global.closeModal", "ModalConfirmacionDeEliminacionDeCicloLectivo");

            await ObtenerCicloLectivo();

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaExito", "Ciclo eliminado correctamente");
        }
        else
        {
            string errorMessage = response.ReasonPhrase;
            Console.WriteLine($"Error: {errorMessage}");

            await JSRuntime.InvokeAsync<object>("global.mostrarAlertaError", "Error al eliminar el ciclo");

        }
    }
}
